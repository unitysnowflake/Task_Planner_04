version: '3.8'

services:
  user-service:
    build: ./user-service
    ports:
      - "8001:8001"
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql+psycopg2://postgres:postgres@postgres:5432/lr_3_test_1
    volumes:
      - ./user-service:/app
    depends_on:
      - postgres
    command: bash -c "while ! pg_isready -h postgres -U postgres; do sleep 1; done; uvicorn user_service:app --host 0.0.0.0 --port 8001"

  goal-service:
    build: ./goal-service
    ports:
      - "8002:8002"
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - ./goal-service:/app
    depends_on:
      - user-service
      - mongodb
    command: uvicorn goal_service:app --host 0.0.0.0 --port 8002

  postgres:
    image: postgres:14
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=lr_3_test_1
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  db_create:
    build: ./user-service
    depends_on:
      postgres:
        condition: service_healthy
    command: python db_create.py
    volumes:
      - ./user-service:/app
    environment:
      - DATABASE_URL=postgresql+psycopg2://postgres:postgres@postgres:5432/postgres
    entrypoint: bash -c "while ! pg_isready -h postgres -U postgres; do sleep 1; done; python db_create.py"

  mongodb:
    image: mongo:5.0
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  mongodb_create:
    build: ./goal-service
    command: python /app/mongodb_create.py
    depends_on:
      - mongodb

volumes:
  postgres_data:
  mongodb_data: